{"version":3,"file":"static/js/449.9e0b1ffc.chunk.js","mappings":"gPAEe,SAASA,EAAUC,GAAoB,IAAjBC,EAAYD,EAAZC,aAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,EAAaK,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAMC,EAAWJ,EAAXI,YAAW,OAC/CP,EAAAA,EAAAA,KAAA,MAAAC,UACEO,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAENC,GAAE,WAAAC,OAAaP,GACfQ,MAAO,CAAEC,KAAMf,GAAWG,SAAA,EAE1BD,EAAAA,EAAAA,KAAA,OACEc,IACEP,EACI,kCAAoCA,EACpC,sCAENQ,MAAO,IACPC,OAAQ,IACRC,IAAKZ,GAASC,KAEhBN,EAAAA,EAAAA,KAAA,MAAAC,SAAKI,GAASC,MAdTF,IAFAA,EAkBJ,KAIb,CCvBe,SAASc,IAAU,IAADC,EAC/BC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CvB,EAAYyB,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAEC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAApDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAG9BG,EAAiC,QAA5BX,EAAGS,EAAaG,IAAI,gBAAQ,IAAAZ,EAAAA,EAAI,GAiB3C,OATAa,EAAAA,EAAAA,YAAU,WClBG,IAAsB1B,EDmB5BwB,ICnB4BxB,EDoBrBwB,ECnBLG,MAAM,mDAADtB,OAC2CL,EAAI,yEACzD4B,MAAK,SAAAC,GACL,OAAOA,EAASC,MAClB,KDgBGF,MAAK,SAAAG,GACJb,GAAec,EAAAA,EAAAA,GAAKD,EAAKE,SAC3B,IACCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GACtC,GAAG,CAACX,KAGFtB,EAAAA,EAAAA,MAAA,OAAAP,SAAA,EACEO,EAAAA,EAAAA,MAAA,QAAMoC,SAjBW,SAAAC,GACnBA,EAAIC,iBACJjB,EAAgB,CAAEC,MAAOe,EAAIE,cAAcC,SAASC,OAAOC,OAC7D,EAciCjD,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,SACEmD,KAAK,OACLC,YAAY,eACZC,aAAa,MACb/C,KAAK,YAEPN,EAAAA,EAAAA,KAAA,UAAQmD,KAAK,SAAQlD,SAAC,cAEvBJ,EAAayD,OAAS,IAAKtD,EAAAA,EAAAA,KAACL,EAAU,CAACE,aAAcA,MAG5D,C","sources":["components/MoviesList.jsx","pages/Movies.jsx","components/service/MoviesNameService.jsx"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\n\nexport default function MoviesList({ searchResult }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {searchResult.map(({ id, title, name, poster_path }) => (\n        <li key={id}>\n          <NavLink\n            key={id}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n          >\n            <img\n              src={\n                poster_path\n                  ? 'https://image.tmdb.org/t/p/w300' + poster_path\n                  : 'https://via.placeholder.com/300x450'\n              }\n              width={300}\n              height={450}\n              alt={title || name}\n            />\n            <h2>{title || name}</h2>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport movieSearch from '../components/service/MoviesNameService';\n\nimport MoviesList from '../components/MoviesList';\n\nexport default function Movies() {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  \n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams({ query: evt.currentTarget.elements.search.value });\n  };\n\n\n  useEffect(() => {\n    if (!query) return;\n    movieSearch(query)\n      .then(resp => {\n        setSearchResult([...resp.results]);\n      })\n      .catch(error => console.log(error));\n  }, [query]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search movie\"\n          autoComplete=\"off\"\n          name=\"search\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searchResult.length > 0 && <MoviesList searchResult={searchResult} />}\n    </div>\n  );\n}\n","\nexport default function MoviesSearch(name) {\n    return fetch(\n        `https://api.themoviedb.org/3/search/movie?query=${name}&include_adult=false&api_key=597110043fc0a029fe5be1548d9129e7&page=1`\n    ).then(response => {\n      return response.json();\n    });\n  }"],"names":["MoviesList","_ref","searchResult","location","useLocation","_jsx","children","map","_ref2","id","title","name","poster_path","_jsxs","NavLink","to","concat","state","from","src","width","height","alt","Movies","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setSearchResult","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","fetch","then","response","json","resp","_toConsumableArray","results","catch","error","console","log","onSubmit","evt","preventDefault","currentTarget","elements","search","value","type","placeholder","autoComplete","length"],"sourceRoot":""}